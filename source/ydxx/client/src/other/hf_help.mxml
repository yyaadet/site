<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="724" height="450" creationComplete="init();" color="0x000000" fontFamily="新宋体" fontSize="12" backgroundAlpha="0">
	
	<mx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.controls.Label;
			import mx.events.ListEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			private var httpService:HTTPService = null;
			private var urlVariables:URLVariables = null;
			
			private var dp1:XML;
			
			private var posID:int = 0;
			
			private var selItem:Object = null;
			
            private var loader:Loader = new Loader();
            private var ui:UIComponent = new UIComponent();
            
            private var loader1:Loader = new Loader();
            private var ui1:UIComponent = new UIComponent();
            
            private var hasPic:Boolean = false;
            
            private var resURL:String = "";
            
			private function init():void
			{
				showHelp("http://192.168.36.12:7000/home/helps", "http://192.168.36.12:8080/", 1);
				lblPic1.text = "";
				lblPic2.text = "";
				ui.addChild(loader);
				cvPic.addChild(ui);
				ui1.addChild(loader1);
				cvPic1.addChild(ui1);
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadComp);
				loader1.contentLoaderInfo.addEventListener(Event.COMPLETE, loadComp1);
			}
			
			private function getData(helpURL:String):void
			{
				if (httpService == null)
				{
					httpService = new HTTPService();
					
					//设定httpservice的返回格式位xml格式
					httpService.resultFormat = HTTPService.RESULT_FORMAT_XML;
					
					//设定httpservice的超时秒数
					httpService.requestTimeout = 60;
					httpService.addEventListener(ResultEvent.RESULT, onGetInfo);
				}
				
				if (urlVariables == null)
					urlVariables = new URLVariables(); 
				
				urlVariables.date = new Date().getTime();
				httpService.url = helpURL;
				httpService.send(urlVariables);
				
				cvLoad.visible = true;
				cvLoad.includeInLayout = true;
			}
			
			private function onGetInfo(evt:ResultEvent):void
			{
				dp1 = XML(evt.result);
				if (dp1 == "" || dp1 == null)
				{
					throw new Error("返回的数据为空");
					return;
				}
				
				tree1.dataProvider = dp1;
				cvLoad.visible = false;
				cvLoad.includeInLayout = false;
				
				this.callLater(pos);
			}
			
			private function treeItemClick(evt:ListEvent):void
			{
            	var item:Object = Tree(evt.currentTarget).selectedItem;
            	showItemInfo(item);
            }
            
            private function expand(isExpand:Boolean):void
            {
             	for each(var item:XML in tree1.dataProvider)
             	{
             		tree1.expandChildrenOf(item, isExpand);
             	}
            }
            
            /**
             * 根据节点ID定位
             * 
             */ 
            private function pos():void
            {
           		tree1.openItems = [];
           		
           		var i:int = 0;
           		var arr:XMLList = dp1..help;
           		var selArr:Array = [];
           		
           		if(arr != null)
           		{
           			for(i = 0; i < arr.length(); i++)
           			{
           				var xml:XML = arr[i];
           				if(int(xml.@id) == posID)
           				{
           					tree1.expandItem(xml, true, true);
           					
           					var parXML:XML = xml;
           					while (parXML.parent() != null)
           					{
           						parXML = parXML.parent();
           						tree1.expandItem(parXML, true, true);
           					}
           					
           					tree1.selectedItem = xml;
           					tree1.scrollToIndex(tree1.selectedIndex);
           					showItemInfo(xml);
           				}
           			}
           		}
            }
            
            private function showItemInfo(item:Object):void
            {
                var content:String = item.@content;
                
                lblTitle.text = item.@title;
                 
                if (content != "")
                	taContent.text = content;
                
                //显示相关链接
                cvLink.removeAllChildren();
                
                var index:int = 0;
                var itemX:int = 0;
                var itemY:int = 0;
                var itemW:int = 90;
                var itemH:int = 20;
                
                var link1:int = int(item.@link1);
                var link2:int = int(item.@link2);
                var link3:int = int(item.@link3);
                var link4:int = int(item.@link4);
                var link5:int = int(item.@link5);
                var link6:int = int(item.@link6);
                var linkList:Array = [];
                
                if (link1 > 0)
                	linkList.push(link1);
                if (link2 > 0)
                	linkList.push(link2);
                if (link3 > 0)
                	linkList.push(link3);
                if (link4 > 0)
                	linkList.push(link4);
                if (link5 > 0)
                	linkList.push(link5);
                if (link6 > 0)
                	linkList.push(link6);
                
                var i:int = 0;
                for (i = 0; i < linkList.length; i++)
                {
                	itemX = i * itemW;
                	itemY = 0;
                	createLink(linkList[i], itemX, itemY, itemW, itemH);
                }	
                
                //加载图片
                if (item.@pic_t2 == "")
                {
                	lblPic1.text = "";
                	lblPic1.mouseChildren = false;
                	lblPic1.useHandCursor = false;
                	lblPic1.buttonMode = false;
                	lblPic1.clearStyle("textDecoration");
                	lblPic1.removeEventListener(MouseEvent.CLICK, pic1Click);
                }
                else
                {
                	lblPic1.text = item.@pic_t2;
                	lblPic1.data = item;
                	lblPic1.mouseChildren = false;
                	lblPic1.useHandCursor = true;
                	lblPic1.buttonMode = true;
                	lblPic1.setStyle("color", "0xE3D71F");
					lblPic1.addEventListener(MouseEvent.CLICK, pic1Click);
                }
                
                if (item.@pic_t3 == "")
                {
                	lblPic2.text = "";
                	lblPic2.useHandCursor = false;
                	lblPic2.buttonMode = false;
                	lblPic2.clearStyle("textDecoration");
                	lblPic2.removeEventListener(MouseEvent.CLICK, pic2Click);
                }
                else
                {
                	lblPic2.text = item.@pic_t3;
                	lblPic2.data = item;
                	lblPic2.mouseChildren = false;
                	lblPic2.useHandCursor = true;
                	lblPic2.buttonMode = true;
                	lblPic2.setStyle("color", "0xE3D71F");
					lblPic2.addEventListener(MouseEvent.CLICK, pic2Click);
                }
                
                if (item.@pic_u1 == "")
                	hasPic = false;
                else
                {
                	hasPic = true;
                	loader.load(new URLRequest(resURL + "help/" + item.@pic_u1));
                }
                
                resizeUI();
            }
            
            private function pic1Click(evt:MouseEvent):void
            {
            	var label1:Label = evt.currentTarget as Label;
            	if (label1 == null) return;
            	
            	var item:Object = label1.data;
            	loader1.load(new URLRequest(resURL + "help/" + item.@pic_u2));
            	
            	ui1.visible = false;
            	ui1.includeInLayout = false;
            	cvPic1.visible = true;
            	cvPic1.includeInLayout = true;
            	lblLoading.visible = true;
            	lblLoading.includeInLayout = true;
            }
            
            private function pic2Click(evt:MouseEvent):void
            {
            	var label1:Label = evt.target as Label;
            	if (label1 == null) return;
            	
            	var item:Object = label1.data;
            	loader1.load(new URLRequest(resURL + "help/" + item.@pic_u3));
            	
            	ui1.visible = false;
            	ui1.includeInLayout = false;
            	cvPic1.visible = true;
            	cvPic1.includeInLayout = true;
            	lblLoading.visible = true;
            	lblLoading.includeInLayout = true;
            }
            
            private function resizeUI():void
            {
        		if (hasPic)
        		{
            		cvPic.visible = true;
            		cvPic.includeInLayout = true;
            		cvPic.y = 45;
            		ui.width = loader.width;
            		ui.height = loader.height;
            		cvPic.width = loader.width;
            		cvPic.height = loader.height;
            		taContent.y = cvPic.y + cvPic.height;
            		taContent.height = 380 - cvPic.height;
            		cvLink.y = taContent.y + taContent.height;
        		}
            	else
            	{
            		cvPic.visible = false;
            		cvPic.includeInLayout = false;
            		taContent.y = 45;
            		taContent.height = 380;
            		cvLink.y = taContent.y + taContent.height;
            	}
            }
            
            private function loadComp(evt:Event):void
            {
               	resizeUI();
            }
            
            private function loadComp1(evt:Event):void
            {
            	ui1.visible = true;
            	ui1.includeInLayout = true;
            	lblLoading.visible = false;
            	lblLoading.includeInLayout = false;
        		ui1.width = loader1.width;
        		ui1.height = loader1.height;
            	cvPic1.width = loader1.width;
            	cvPic1.height = loader1.height;
            }
            
            private function createLink(itemID:int, itemX:int, itemY:int, itemW:int, itemH:int):void
            {
            	var item:Object;
            	item = getItemByID(itemID);
            	if (item == null) return;
            	
            	var label1:Label = new Label();
            	label1.text = item.@title;
            	label1.x = itemX;
            	label1.y = itemY;
            	label1.width = itemW;
            	label1.height = itemH;
            	label1.data = item;
            	cvLink.addChild(label1);
            	label1.buttonMode = true;
            	label1.useHandCursor = true;
            	label1.mouseChildren = false;
            	label1.setStyle("color", "0xE3D71F");
            	label1.addEventListener(MouseEvent.CLICK, onClick);
            }
            
            private function onClick(evt:MouseEvent):void
            {
            	var label1:Label = evt.target as Label;
            	if (label1 == null) return;
            	
            	var item:Object;
            	item = label1.data;
            	posID = int(item.@id);
            	pos();
            }
            
            private function getItemByID(itemID:int):Object
            {
           		var i:int = 0;
           		var arr:XMLList = dp1..help;
           		var selArr:Array = [];
           		
           		if(arr != null)
           		{
           			for(i = 0; i < arr.length(); i++)
           			{
           				var xml:XML = arr[i];
           				if(int(xml.@id) == itemID)
           					return xml;
           			}
           		}
           		
           		return null;
            }
            
            private function closePic(evt:MouseEvent):void
            {
            	cvPic1.visible = false;
            	cvPic1.includeInLayout = false;
            }
            
            //由主程序调用
            public function showHelp(helpURL:String, url:String, helpID:int):void
            {
            	posID = helpID;
            	resURL = url;
            	getData(helpURL);
            }
            
		]]>
	</mx:Script>
	
	<mx:Canvas x="0" y="0" width="165" height="450" styleName="lowCanvas">
		<mx:Label x="30" y="15" width="100" fontWeight="bold" fontSize="20" textAlign="center" height="25" color="#FFFFFF" text="目 录"/>
		<mx:Tree id="tree1" x="0" y="45" width="161" height="400" labelField="@title" showRoot="false" itemClick="treeItemClick(event);" backgroundAlpha="0" borderStyle="none" color="#FFFFFF"></mx:Tree>
	</mx:Canvas>
	
	<mx:Canvas x="170" y="0" width="554" height="450" styleName="lowCanvas">
		<mx:Canvas id="cvTitle" x="0" y="5" width="548" height="40">
			<mx:Label id="lblTitle" width="160" fontWeight="bold" fontSize="20" textAlign="center" height="25" horizontalCenter="-20" verticalCenter="0" color="#FFFFFF"/>
			<mx:Label id="lblPic2" y="0" text="" width="100" height="20" right="110" textAlign="right"/>
			<mx:Label id="lblPic1" y="0" text="" width="100" height="20" right="5" textAlign="right"/>
		</mx:Canvas>
		<mx:Canvas id="cvPic" x="0" y="45" width="548" height="130">
		</mx:Canvas>
		<mx:TextArea id="taContent" x="0" y="175" width="548" height="250" backgroundAlpha="0" editable="false" leading="6"/>
		<mx:Canvas id="cvLink" x="0" y="425" width="548" height="20">
		</mx:Canvas>
	</mx:Canvas>
	
	<mx:Canvas id="cvLoad" x="0" y="0" width="100%" height="100%" visible="false" includeInLayout="false">
		<mx:Label text="正在获取信息，请稍候..." width="247" fontWeight="bold" horizontalCenter="0" verticalCenter="0"/>
	</mx:Canvas>
	
	<mx:Canvas id="cvPic1" width="200" height="200" visible="false" includeInLayout="false" horizontalCenter="0" verticalCenter="0" click="closePic(event);">
		<mx:Label id="lblLoading" text="正在加载图片，请稍候..." width="200" fontWeight="bold" horizontalCenter="0" verticalCenter="0"/>
	</mx:Canvas>
	
</mx:Application>
